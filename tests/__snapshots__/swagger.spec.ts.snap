// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should test categories parsing paths 1`] = `
Object {
  "definitions": Object {
    "ChannelCategoriesFetchAllResponse": Object {
      "properties": Object {
        "data": Object {
          "items": Object {
            "properties": Object {
              "color": Object {
                "type": "string",
              },
              "id": Object {
                "type": "string",
              },
              "region": Object {
                "type": "string",
              },
              "sortIndex": Object {
                "type": "number",
              },
              "svg": Object {
                "type": "string",
              },
              "title": Object {
                "type": "string",
              },
            },
            "required": Array [
              "id",
              "region",
              "sortIndex",
              "svg",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
        "next": Object {
          "type": "boolean",
        },
      },
      "required": Array [
        "data",
      ],
      "type": "object",
    },
    "ChannelCategory": Object {
      "properties": Object {
        "color": Object {
          "type": "string",
        },
        "id": Object {
          "type": "string",
        },
        "region": Object {
          "type": "string",
        },
        "sortIndex": Object {
          "type": "number",
        },
        "svg": Object {
          "type": "string",
        },
        "title": Object {
          "type": "string",
        },
      },
      "required": Array [
        "id",
        "region",
        "sortIndex",
        "svg",
        "title",
      ],
      "type": "object",
    },
  },
  "info": Object {
    "title": "content",
    "version": "1.0.0",
  },
  "paths": Object {
    "/channel-categories": Object {
      "get": Object {
        "operationId": "getChannelCategories",
        "parameters": Array [
          Object {
            "description": "Region",
            "in": "query",
            "name": "region",
            "type": "string",
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "Successful",
            "schema": Object {
              "properties": Object {
                "data": Object {
                  "items": Object {
                    "properties": Object {
                      "color": Object {
                        "type": "string",
                      },
                      "id": Object {
                        "type": "string",
                      },
                      "region": Object {
                        "type": "string",
                      },
                      "sortIndex": Object {
                        "type": "number",
                      },
                      "svg": Object {
                        "type": "string",
                      },
                      "title": Object {
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "id",
                      "region",
                      "sortIndex",
                      "svg",
                      "title",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
                "next": Object {
                  "type": "boolean",
                },
              },
              "required": Array [
                "data",
              ],
              "type": "object",
            },
          },
        },
        "summary": "Fetch channel categories list",
        "tags": Array [
          "channel-categories",
        ],
      },
    },
  },
  "swagger": "2.0",
}
`;

exports[`should test channels parsing paths 1`] = `
Object {
  "basePath": "/",
  "definitions": Object {
    "Channel": Object {
      "properties": Object {
        "avatarImageId": Object {
          "type": "string",
        },
        "coverImageId": Object {
          "type": "string",
        },
        "creatorId": Object {
          "type": "string",
        },
        "datetime": Object {
          "format": "date",
          "type": "string",
        },
        "description": Object {
          "type": "string",
        },
        "followers": Object {
          "type": "number",
        },
        "id": Object {
          "type": "string",
        },
        "playlistMode": Object {
          "enum": Array [
            "new",
            "shuffle",
          ],
          "type": "string",
        },
        "private": Object {
          "type": "boolean",
        },
        "showInNews": Object {
          "type": "boolean",
        },
        "title": Object {
          "type": "string",
        },
        "website": Object {
          "type": "string",
        },
      },
      "required": Array [
        "avatarImageId",
        "coverImageId",
        "creatorId",
        "datetime",
        "description",
        "followers",
        "id",
        "playlistMode",
        "private",
        "showInNews",
        "title",
      ],
      "type": "object",
    },
    "ChannelsCreateRequest": Object {
      "properties": Object {
        "avatarImageId": Object {
          "type": "string",
        },
        "coverImageId": Object {
          "type": "string",
        },
        "creatorId": Object {
          "type": "string",
        },
        "description": Object {
          "type": "string",
        },
        "playlistMode": Object {
          "default": "shuffle",
          "enum": Array [
            "new",
            "shuffle",
          ],
          "type": "string",
        },
        "private": Object {
          "type": "boolean",
        },
        "title": Object {
          "type": "string",
        },
        "website": Object {
          "type": "string",
        },
      },
      "required": Array [
        "avatarImageId",
        "coverImageId",
        "creatorId",
        "description",
        "private",
        "title",
      ],
      "type": "object",
    },
    "ChannelsFetchAllList": Object {
      "items": Object {
        "properties": Object {
          "avatarImageId": Object {
            "type": "string",
          },
          "coverImageId": Object {
            "type": "string",
          },
          "creatorId": Object {
            "type": "string",
          },
          "datetime": Object {
            "format": "date",
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
          "followers": Object {
            "type": "number",
          },
          "id": Object {
            "type": "string",
          },
          "playlistMode": Object {
            "enum": Array [
              "new",
              "shuffle",
            ],
            "type": "string",
          },
          "private": Object {
            "type": "boolean",
          },
          "showInNews": Object {
            "type": "boolean",
          },
          "title": Object {
            "type": "string",
          },
          "website": Object {
            "type": "string",
          },
        },
        "required": Array [
          "avatarImageId",
          "coverImageId",
          "creatorId",
          "datetime",
          "description",
          "followers",
          "id",
          "playlistMode",
          "private",
          "showInNews",
          "title",
        ],
        "type": "object",
      },
      "type": "array",
    },
    "ChannelsFetchAllResponse": Object {
      "properties": Object {
        "data": Object {
          "items": Object {
            "properties": Object {
              "avatarImageId": Object {
                "type": "string",
              },
              "coverImageId": Object {
                "type": "string",
              },
              "creatorId": Object {
                "type": "string",
              },
              "datetime": Object {
                "format": "date",
                "type": "string",
              },
              "description": Object {
                "type": "string",
              },
              "followers": Object {
                "type": "number",
              },
              "id": Object {
                "type": "string",
              },
              "playlistMode": Object {
                "enum": Array [
                  "new",
                  "shuffle",
                ],
                "type": "string",
              },
              "private": Object {
                "type": "boolean",
              },
              "showInNews": Object {
                "type": "boolean",
              },
              "title": Object {
                "type": "string",
              },
              "website": Object {
                "type": "string",
              },
            },
            "required": Array [
              "avatarImageId",
              "coverImageId",
              "creatorId",
              "datetime",
              "description",
              "followers",
              "id",
              "playlistMode",
              "private",
              "showInNews",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
        "next": Object {
          "type": "boolean",
        },
      },
      "required": Array [
        "data",
      ],
      "type": "object",
    },
    "ChannelsFetchByIdResponse": Object {
      "properties": Object {
        "data": Object {
          "properties": Object {
            "avatarImageId": Object {
              "type": "string",
            },
            "coverImageId": Object {
              "type": "string",
            },
            "creatorId": Object {
              "type": "string",
            },
            "datetime": Object {
              "format": "date",
              "type": "string",
            },
            "description": Object {
              "type": "string",
            },
            "followers": Object {
              "type": "number",
            },
            "id": Object {
              "type": "string",
            },
            "playlistMode": Object {
              "enum": Array [
                "new",
                "shuffle",
              ],
              "type": "string",
            },
            "private": Object {
              "type": "boolean",
            },
            "showInNews": Object {
              "type": "boolean",
            },
            "title": Object {
              "type": "string",
            },
            "website": Object {
              "type": "string",
            },
          },
          "required": Array [
            "avatarImageId",
            "coverImageId",
            "creatorId",
            "datetime",
            "description",
            "followers",
            "id",
            "playlistMode",
            "private",
            "showInNews",
            "title",
          ],
          "type": "object",
        },
        "next": Object {
          "type": "boolean",
        },
      },
      "required": Array [
        "data",
      ],
      "type": "object",
    },
    "Wakie": Object {
      "properties": Object {
        "audioId": Object {
          "type": "string",
        },
        "authorName": Object {
          "type": "string",
        },
        "channelId": Object {
          "type": "string",
        },
        "comments": Object {
          "type": "number",
        },
        "creatorId": Object {
          "type": "string",
        },
        "datetime": Object {
          "format": "date",
          "type": "string",
        },
        "duration": Object {
          "type": "number",
        },
        "id": Object {
          "type": "string",
        },
        "imageId": Object {
          "type": "string",
        },
        "likes": Object {
          "type": "number",
        },
        "plays": Object {
          "type": "number",
        },
        "publishDatetime": Object {
          "format": "date",
          "type": "string",
        },
        "status": Object {
          "enum": Array [
            "created",
            "finished",
            "error",
          ],
          "type": "string",
        },
        "title": Object {
          "type": "string",
        },
      },
      "required": Array [
        "audioId",
        "authorName",
        "channelId",
        "comments",
        "creatorId",
        "datetime",
        "duration",
        "id",
        "imageId",
        "likes",
        "plays",
        "publishDatetime",
        "status",
        "title",
      ],
      "type": "object",
    },
  },
  "info": Object {
    "title": "content",
    "version": "1.0.0",
  },
  "paths": Object {
    "/channels": Object {
      "get": Object {
        "operationId": "getChannels",
        "parameters": Array [
          Object {
            "description": "Category id",
            "in": "query",
            "name": "categoryId",
            "type": "string",
          },
          Object {
            "description": "Creator id",
            "in": "query",
            "name": "creatorId",
            "type": "string",
          },
          Object {
            "collectionFormat": "multi",
            "description": "List of id's",
            "in": "query",
            "items": Object {
              "type": "string",
            },
            "name": "id",
            "type": "array",
          },
          Object {
            "default": false,
            "description": "Private channels included",
            "in": "query",
            "name": "private",
            "type": "boolean",
          },
          Object {
            "description": "Region name",
            "in": "query",
            "name": "region",
            "type": "string",
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "Successful",
            "schema": Object {
              "properties": Object {
                "data": Object {
                  "items": Object {
                    "properties": Object {
                      "avatarImageId": Object {
                        "type": "string",
                      },
                      "coverImageId": Object {
                        "type": "string",
                      },
                      "creatorId": Object {
                        "type": "string",
                      },
                      "datetime": Object {
                        "format": "date",
                        "type": "string",
                      },
                      "description": Object {
                        "type": "string",
                      },
                      "followers": Object {
                        "type": "number",
                      },
                      "id": Object {
                        "type": "string",
                      },
                      "playlistMode": Object {
                        "enum": Array [
                          "new",
                          "shuffle",
                        ],
                        "type": "string",
                      },
                      "private": Object {
                        "type": "boolean",
                      },
                      "showInNews": Object {
                        "type": "boolean",
                      },
                      "title": Object {
                        "type": "string",
                      },
                      "website": Object {
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "avatarImageId",
                      "coverImageId",
                      "creatorId",
                      "datetime",
                      "description",
                      "followers",
                      "id",
                      "playlistMode",
                      "private",
                      "showInNews",
                      "title",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
                "next": Object {
                  "type": "boolean",
                },
              },
              "required": Array [
                "data",
              ],
              "type": "object",
            },
          },
        },
        "summary": "Fetch channels list",
        "tags": Array [
          "channels",
        ],
      },
      "post": Object {
        "operationId": "postChannels",
        "parameters": Array [
          Object {
            "in": "body",
            "name": "body",
            "schema": Object {
              "properties": Object {
                "avatarImageId": Object {
                  "type": "string",
                },
                "coverImageId": Object {
                  "type": "string",
                },
                "creatorId": Object {
                  "type": "string",
                },
                "description": Object {
                  "type": "string",
                },
                "playlistMode": Object {
                  "default": "shuffle",
                  "enum": Array [
                    "new",
                    "shuffle",
                  ],
                  "type": "string",
                },
                "private": Object {
                  "type": "boolean",
                },
                "title": Object {
                  "type": "string",
                },
                "website": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "avatarImageId",
                "coverImageId",
                "creatorId",
                "description",
                "private",
                "title",
              ],
              "type": "object",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "Successful",
            "schema": Object {
              "properties": Object {
                "data": Object {
                  "properties": Object {
                    "avatarImageId": Object {
                      "type": "string",
                    },
                    "coverImageId": Object {
                      "type": "string",
                    },
                    "creatorId": Object {
                      "type": "string",
                    },
                    "datetime": Object {
                      "format": "date",
                      "type": "string",
                    },
                    "description": Object {
                      "type": "string",
                    },
                    "followers": Object {
                      "type": "number",
                    },
                    "id": Object {
                      "type": "string",
                    },
                    "playlistMode": Object {
                      "enum": Array [
                        "new",
                        "shuffle",
                      ],
                      "type": "string",
                    },
                    "private": Object {
                      "type": "boolean",
                    },
                    "showInNews": Object {
                      "type": "boolean",
                    },
                    "title": Object {
                      "type": "string",
                    },
                    "website": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "avatarImageId",
                    "coverImageId",
                    "creatorId",
                    "datetime",
                    "description",
                    "followers",
                    "id",
                    "playlistMode",
                    "private",
                    "showInNews",
                    "title",
                  ],
                  "type": "object",
                },
                "next": Object {
                  "type": "boolean",
                },
              },
              "required": Array [
                "data",
              ],
              "type": "object",
            },
          },
        },
        "summary": "Create channel",
        "tags": Array [
          "channels",
        ],
      },
    },
  },
  "schemes": Array [
    "https",
  ],
  "swagger": "2.0",
  "tags": Array [],
}
`;

exports[`should test petstore parsing paths 1`] = `
Object {
  "basePath": "/api",
  "definitions": Object {
    "Error": Object {
      "properties": Object {
        "code": Object {
          "format": "int32",
          "type": "integer",
        },
        "message": Object {
          "type": "string",
        },
      },
      "required": Array [
        "code",
        "message",
      ],
      "type": "object",
    },
    "NewPet": Object {
      "properties": Object {
        "name": Object {
          "type": "string",
        },
        "tag": Object {
          "type": "string",
        },
      },
      "required": Array [
        "name",
      ],
      "type": "object",
    },
    "Pet": Object {
      "allOf": Array [
        Object {
          "properties": Object {
            "name": Object {
              "type": "string",
            },
            "tag": Object {
              "type": "string",
            },
          },
          "required": Array [
            "name",
          ],
          "type": "object",
        },
        Object {
          "properties": Object {
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
          },
          "required": Array [
            "id",
          ],
        },
      ],
      "type": "object",
    },
  },
  "host": "petstore.swagger.io",
  "info": Object {
    "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
    "title": "Swagger Petstore",
    "version": "1.0.0",
  },
  "paths": Object {
    "/pets": Object {
      "get": Object {
        "description": "Returns all pets from the system that the user has access to Nam sed condimentum est.",
        "operationId": "findPets",
        "parameters": Array [
          Object {
            "collectionFormat": "csv",
            "description": "tags to filter by",
            "in": "query",
            "items": Object {
              "type": "string",
            },
            "name": "tags",
            "required": false,
            "type": "array",
          },
          Object {
            "description": "maximum number of results to return",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "pet response",
            "schema": Object {
              "items": Object {
                "allOf": Array [
                  Object {
                    "properties": Object {
                      "name": Object {
                        "type": "string",
                      },
                      "tag": Object {
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "name",
                    ],
                    "type": "object",
                  },
                  Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                    },
                    "required": Array [
                      "id",
                    ],
                  },
                ],
                "type": "object",
              },
              "type": "array",
            },
          },
          "default": Object {
            "description": "unexpected error",
            "schema": Object {
              "properties": Object {
                "code": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "message": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "code",
                "message",
              ],
              "type": "object",
            },
          },
        },
      },
      "post": Object {
        "description": "Creates a new pet in the store.  Duplicates are allowed",
        "operationId": "addPet",
        "parameters": Array [
          Object {
            "description": "Pet to add to the store",
            "in": "body",
            "name": "pet",
            "required": true,
            "schema": Object {
              "properties": Object {
                "name": Object {
                  "type": "string",
                },
                "tag": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "name",
              ],
              "type": "object",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "pet response",
            "schema": Object {
              "allOf": Array [
                Object {
                  "properties": Object {
                    "name": Object {
                      "type": "string",
                    },
                    "tag": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "name",
                  ],
                  "type": "object",
                },
                Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": Array [
                    "id",
                  ],
                },
              ],
              "type": "object",
            },
          },
          "default": Object {
            "description": "unexpected error",
            "schema": Object {
              "properties": Object {
                "code": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "message": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "code",
                "message",
              ],
              "type": "object",
            },
          },
        },
      },
    },
    "/pets/{id}": Object {
      "delete": Object {
        "description": "deletes a single pet based on the ID supplied",
        "operationId": "deletePet",
        "parameters": Array [
          Object {
            "description": "ID of pet to delete",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "pet deleted",
          },
          "default": Object {
            "description": "unexpected error",
            "schema": Object {
              "properties": Object {
                "code": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "message": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "code",
                "message",
              ],
              "type": "object",
            },
          },
        },
      },
      "get": Object {
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "find pet by id",
        "parameters": Array [
          Object {
            "description": "ID of pet to fetch",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "pet response",
            "schema": Object {
              "allOf": Array [
                Object {
                  "properties": Object {
                    "name": Object {
                      "type": "string",
                    },
                    "tag": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "name",
                  ],
                  "type": "object",
                },
                Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": Array [
                    "id",
                  ],
                },
              ],
              "type": "object",
            },
          },
          "default": Object {
            "description": "unexpected error",
            "schema": Object {
              "properties": Object {
                "code": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "message": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "code",
                "message",
              ],
              "type": "object",
            },
          },
        },
      },
    },
  },
  "swagger": "2.0",
}
`;
